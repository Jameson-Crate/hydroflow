---
source: hydroflow_plus_test/src/lib.rs
expression: "joined.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"<div style=text-align:center>(1v1)</div> <code>source_stream({<br>    use crate::__staged::*;<br>    let input_stream = input_stream;<br>    input_stream<br>})</code>"/]:::pullClass
2v1[/"(2v1) <code>tee()</code>"\]:::pushClass
3v1[/"<div style=text-align:center>(3v1)</div> <code>map({<br>    use crate::__staged::*;<br>    |v| (v + 1, ())<br>})</code>"\]:::pushClass
4v1[\"(4v1) <code>tee()</code>"/]:::pullClass
5v1[/"<div style=text-align:center>(5v1)</div> <code>map({<br>    use crate::__staged::*;<br>    |v| (v - 1, ())<br>})</code>"\]:::pushClass
6v1[\"(6v1) <code>tee()</code>"/]:::pullClass
7v1[\"(7v1) <code>join::&lt;'tick, 'tick&gt;()</code>"/]:::pullClass
8v1[\"(8v1) <code>tee()</code>"/]:::pullClass
9v1[\"<div style=text-align:center>(9v1)</div> <code>map({<br>    use crate::__staged::*;<br>    |t| t.0<br>})</code>"/]:::pullClass
10v1[/"(10v1) <code>tee()</code>"\]:::pushClass
11v1[/"<div style=text-align:center>(11v1)</div> <code>for_each({<br>    use crate::__staged::*;<br>    let output = output;<br>    |v| {<br>        output.send(v).unwrap();<br>    }<br>})</code>"\]:::pushClass
12v1[/"<div style=text-align:center>(12v1)</div> <code>for_each({<br>    use crate::__staged::*;<br>    let output = output;<br>    |v| {<br>        output.send(v).unwrap();<br>    }<br>})</code>"\]:::pushClass
13v1["(13v1) <code>handoff</code>"]:::otherClass
14v1["(14v1) <code>handoff</code>"]:::otherClass
1v1-->2v1
3v1-->13v1
2v1-->3v1
5v1-->14v1
2v1-->5v1
7v1-->8v1
4v1-->|0|7v1
6v1-->|1|7v1
9v1-->10v1
8v1-->9v1
10v1-->11v1
10v1-->12v1
13v1-->4v1
14v1-->6v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    5v1
    subgraph sg_1v1_var_stream_0 ["var <tt>stream_0</tt>"]
        1v1
        2v1
    end
    subgraph sg_1v1_var_stream_1 ["var <tt>stream_1</tt>"]
        3v1
    end
    subgraph sg_1v1_var_stream_2 ["var <tt>stream_2</tt>"]
        5v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    4v1
    6v1
    7v1
    8v1
    9v1
    10v1
    11v1
    12v1
    subgraph sg_2v1_var_stream_1 ["var <tt>stream_1</tt>"]
        4v1
    end
    subgraph sg_2v1_var_stream_2 ["var <tt>stream_2</tt>"]
        6v1
    end
    subgraph sg_2v1_var_stream_3 ["var <tt>stream_3</tt>"]
        7v1
        8v1
    end
    subgraph sg_2v1_var_stream_4 ["var <tt>stream_4</tt>"]
        9v1
        10v1
    end
    subgraph sg_2v1_var_stream_5 ["var <tt>stream_5</tt>"]
        11v1
    end
    subgraph sg_2v1_var_stream_6 ["var <tt>stream_6</tt>"]
        12v1
    end
end

