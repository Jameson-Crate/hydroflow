---
source: hydroflow_plus_test/src/lib.rs
expression: "count.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_stream(input_stream)</code>"/]:::pullClass
2v1[\"(2v1) <code>tee()</code>"/]:::pullClass
3v1[\"<div style=text-align:center>(3v1)</div> <code>map({<br>    use crate::__staged::*;<br>    |_| 1<br>})</code>"/]:::pullClass
4v1[\"(4v1) <code>tee()</code>"/]:::pullClass
5v1[\"<div style=text-align:center>(5v1)</div> <code>fold(<br>    {<br>        use crate::__staged::*;<br>        || 0<br>    },<br>    {<br>        use crate::__staged::*;<br>        |a, b| *a += b<br>    },<br>)</code>"/]:::pullClass
6v1[\"(6v1) <code>tee()</code>"/]:::pullClass
7v1[/"<div style=text-align:center>(7v1)</div> <code>for_each({<br>    use crate::__staged::*;<br>    let output = output;<br>    |v| {<br>        output.send(v).unwrap();<br>    }<br>})</code>"\]:::pushClass
8v1["(8v1) <code>handoff</code>"]:::otherClass
1v1-->2v1
3v1-->4v1
2v1-->3v1
5v1-->6v1
4v1-->8v1
6v1-->7v1
8v1--x5v1; linkStyle 6 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    4v1
    subgraph sg_1v1_var_stream_0 ["var <tt>stream_0</tt>"]
        1v1
        2v1
    end
    subgraph sg_1v1_var_stream_1 ["var <tt>stream_1</tt>"]
        3v1
        4v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    5v1
    6v1
    7v1
    subgraph sg_2v1_var_stream_2 ["var <tt>stream_2</tt>"]
        5v1
        6v1
    end
    subgraph sg_2v1_var_stream_3 ["var <tt>stream_3</tt>"]
        7v1
    end
end

